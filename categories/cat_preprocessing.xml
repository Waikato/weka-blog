<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>WEKA Blog (Posts about preprocessing)</title><link>https://waikato.github.io/weka-blog/</link><description></description><atom:link type="application/rss+xml" rel="self" href="https://waikato.github.io/weka-blog/categories/cat_preprocessing.xml"></atom:link><language>en</language><lastBuildDate>Mon, 13 May 2019 05:23:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Oversampling and Undersampling</title><link>https://waikato.github.io/weka-blog/posts/2019-01-30-sampling/</link><dc:creator>Eibe Frank</dc:creator><description>&lt;div&gt;&lt;p&gt;A frequent question of Weka users is how to implement oversampling or undersampling, which are two common strategies for dealing with imbalanced classes in classification problems. This post provides some explanation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://waikato.github.io/weka-blog/posts/2019-01-30-sampling/"&gt;Read moreâ€¦&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>github</category><guid>https://waikato.github.io/weka-blog/posts/2019-01-30-sampling/</guid><pubDate>Tue, 29 Jan 2019 23:10:00 GMT</pubDate></item></channel></rss>