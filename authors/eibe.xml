<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WEKA Blog (Posts by eibe)</title><link>https://waikato.github.io/weka-blog/</link><description></description><atom:link type="application/rss+xml" href="https://waikato.github.io/weka-blog/authors/eibe.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 09 Oct 2018 02:23:05 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Making a Weka classifier</title><link>https://waikato.github.io/weka-blog/posts/2018-10-08-making-a-weka-classifier/</link><dc:creator>eibe</dc:creator><description>&lt;div&gt;&lt;p&gt;One role of the Weka software is to provide users with the opportunity to implement machine learning algorithms without having to deal with data import and evaluation issues: when a classifier has been written as a Java class that implements a couple of standard methods defined in the Weka framework, all the goodies that come with Weka are automatically applicable to it, and it will automatically show up in Weka's graphical user interfaces. To see what needs to be done, read on!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://waikato.github.io/weka-blog/posts/2018-10-08-making-a-weka-classifier/"&gt;Read moreâ€¦&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>github</category><guid>https://waikato.github.io/weka-blog/posts/2018-10-08-making-a-weka-classifier/</guid><pubDate>Mon, 08 Oct 2018 04:02:00 GMT</pubDate></item></channel></rss>